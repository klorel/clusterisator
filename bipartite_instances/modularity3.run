
reset;
model modularity.mod;
data divorces2.dat;
# data social_work.dat;
# data women.dat;

set V4 := { (iR,iB,jR,jB) in V2 : (iR,jB) in E or (jR,iB) in E  };

param activate{ V4} default 1;

var x{V1} binary;

maximize modularity: sum{(i,j) in V1} w[i,j]*x[i,j];

subject to ctr { (iR,iB,jR,jB) in V4 } : activate[iR,iB,jR,jB]*(+x[iR,iB]+x[iR,jB]+x[jR,iB]-x[jR,jB])<=2;


option solver xpress;
option xpress_options "outlev=1 symmetry=0";

solve modularity;

param violated_cuts;



repeat 
{
	solve modularity;
	let violated_cuts := card({ (iR,iB,jR,jB) in V4 : +x[iR,iB]+x[iR,jB]+x[jR,iB]-x[jR,jB]>2});
	
	display violated_cuts;
	
	let{ (iR,iB,jR,jB) in V4} activate[iR,iB,jR,jB] := if(+x[iR,iB]+x[iR,jB]+x[jR,iB]-x[jR,jB]>2) then 1 else activate[iR,iB,jR,jB] ;
	
}until violated_cuts == 0;

display modularity;
