reset;

param instance 				symbolic := include "instance.txt";
param criterion       symbolic := include "criterion.txt";
param chosen_formulation 	symbolic := include "formulation.txt";

model problem.mod;
###
data;
close problem.dat;
printf "set IJ := include ../txt/%s.txt;", instance > problem.dat;
data problem.dat;




option solver cplexamp;
 option cplex_options "timing=1 varsel=4 mipdisplay=4 timelimit=3600";
#option cplex_options "timing=1 varsel=4 cutpass=-1 mipdisplay=2";
problem ProblemFormulated:
	modularity, 
	t, 
	{kind in 1..3, (i,j,k) in CONSTRAINT_FOR_PROBLEM[chosen_formulation, kind]}constraints[kind,i,j,k]
	;


#let{i in 1.._ncons}_con[i].lazy := 1;
solve modularity;


include after_solve.run;

display C;
display n, m;
display H[1,2];
display H[1,12];
display d;
