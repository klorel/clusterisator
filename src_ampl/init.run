
# create constraints

param N_SINGLETON;
let N_SINGLETON := 0;


let POOL_COST := {};
let POOL_SOLUTION := {};
# add singleton
for{v in V}{
	let N_SINGLETON := N_SINGLETON+1;
	let POOL_COST := POOL_COST union {(N_SINGLETON, 0, +1)};
	let POOL_SOLUTION := POOL_SOLUTION union {(N_SINGLETON, v)};

#	let Y_COST := Y_COST union {(N_SINGLETON, 0)};
#	let Y_REDUCED_COST := Y_REDUCED_COST union {(N_SINGLETON, 0)};	
#	let Y_ROW := Y_ROW union {(N_SINGLETON, v)};
#	let Y_A   := Y_A union {(N_SINGLETON, v, 1)};

};

let N_SINGLETON := N_SINGLETON+1;
let POOL_COST := POOL_COST union {(N_SINGLETON, 0, +1)};
let POOL_SOLUTION := POOL_SOLUTION union union{v in V}{(N_SINGLETON, v)};

include add_column.run;	
